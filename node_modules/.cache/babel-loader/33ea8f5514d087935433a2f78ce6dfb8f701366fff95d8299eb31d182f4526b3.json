{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import WeatherChart from\"./components/weather/WeatherChart\";import ForecastCard from\"./components/weather/ForecastCard\";import ChartControls from\"./components/weather/ChartControls\";import{useWeatherData}from\"./hooks/useWeatherData\";import{DAYS,TIME_PERIODS,TIME_RANGES}from'./utils/constants';import{formatDate,getVisibleHours}from'./utils/dateUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[location,setLocation]=useState(\"Manhattan, NYC\");const[selectedDay,setSelectedDay]=useState(5);const[selectedPeriod,setSelectedPeriod]=useState(\"afternoon\");const[currentStartIndex,setCurrentStartIndex]=useState(0);const[selectedRange,setSelectedRange]=useState(null);const{firstDay,secondDay,loading,error}=useWeatherData(location,selectedDay);// Reset the start index when the period changes\nuseEffect(()=>{const timeRange=TIME_RANGES[selectedPeriod];setCurrentStartIndex(timeRange.start);},[selectedPeriod]);// Reset selected range when scrolling occurs\nuseEffect(()=>{setSelectedRange(null);},[currentStartIndex]);const handleLocationSubmit=e=>{e.preventDefault();const form=e.target;const input=form.elements.namedItem('location');if(input.value.trim()){setLocation(input.value.trim());}};const handleDayChange=e=>{setSelectedDay(parseInt(e.target.value));};const handlePeriodChange=e=>{setSelectedPeriod(e.target.value);};const handleRangeChange=range=>{setSelectedRange(range);};const getWeatherStats=(hours,start,end)=>{// Convert time strings to hour indices (0-23)\nconst convertTimeToIndex=timeStr=>{if(timeStr.includes('PM')){const hour=parseInt(timeStr.replace('PM',''));return hour===12?12:hour+12;}else if(timeStr.includes('AM')){const hour=parseInt(timeStr.replace('AM',''));return hour===12?0:hour;}return parseInt(timeStr);};const startHour=convertTimeToIndex(start);const endHour=convertTimeToIndex(end);// Get the hours within the selected range\nconst rangeHours=hours.slice(startHour,endHour+1);if(rangeHours.length===0){return null;}return{maxTemp:Math.max(...rangeHours.map(h=>h.temp)),minTemp:Math.min(...rangeHours.map(h=>h.temp)),maxHumidity:Math.max(...rangeHours.map(h=>h.humidity)),minHumidity:Math.min(...rangeHours.map(h=>h.humidity)),maxRainChance:Math.max(...rangeHours.map(h=>h.precipprob)),minRainChance:Math.min(...rangeHours.map(h=>h.precipprob)),maxWind:Math.max(...rangeHours.map(h=>h.windspeed)),minWind:Math.min(...rangeHours.map(h=>h.windspeed))};};if(loading)return/*#__PURE__*/_jsx(\"p\",{className:\"text-center mt-20\",children:\"Loading...\"});if(error)return/*#__PURE__*/_jsx(\"p\",{className:\"text-center mt-20 text-red-500\",children:error});if(!firstDay||!secondDay)return/*#__PURE__*/_jsx(\"p\",{className:\"text-center mt-20\",children:\"No data available\"});const firstDayVisibleHours=getVisibleHours(firstDay.hours,currentStartIndex);const secondDayVisibleHours=getVisibleHours(secondDay.hours,currentStartIndex);return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-br from-blue-200 to-blue-400 p-4 md:p-8 pb-24 md:pb-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 left-4\",children:/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/WeatherLogo.png\"),alt:\"Weather App Logo\",className:\"h-12 w-auto\"})}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleLocationSubmit,className:\"max-w-md mx-auto mb-8 mt-16\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"location\",placeholder:\"Enter location (e.g., San Francisco, CA)\",className:\"flex-1 px-4 py-2 rounded-lg bg-white/90 backdrop-blur-sm text-gray-800 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500\",defaultValue:location}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"px-6 py-2 bg-blue-400 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\",children:\"Search\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"select\",{value:selectedDay,onChange:handleDayChange,className:\"flex-1 px-4 py-2 rounded-lg bg-white/90 backdrop-blur-sm text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500\",children:DAYS.map(day=>/*#__PURE__*/_jsx(\"option\",{value:day.value,children:day.label},day.value))}),/*#__PURE__*/_jsx(\"select\",{value:selectedPeriod,onChange:handlePeriodChange,className:\"flex-1 px-4 py-2 rounded-lg bg-white/90 backdrop-blur-sm text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500\",children:TIME_PERIODS.map(period=>/*#__PURE__*/_jsx(\"option\",{value:period.value,children:period.label},period.value))})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/10 rounded-lg p-6 backdrop-blur-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 gap-4 mb-4\",children:/*#__PURE__*/_jsx(ForecastCard,{date:formatDate(firstDay.datetime),icon:firstDay.icon===\"clear-day\"?\"sunny\":firstDay.icon===\"rain\"?\"rainy\":\"cloudy\",temp:firstDay.temp,humidity:firstDay.hours[0].humidity,maxRainChance:firstDay?Math.max(...firstDay.hours.map(h=>h.precipprob)):0,selectedRange:selectedRange,weatherStats:selectedRange?getWeatherStats(firstDay.hours,selectedRange.start,selectedRange.end):null})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white/5 rounded-lg p-4 min-h-[600px]\",children:/*#__PURE__*/_jsx(WeatherChart,{labels:firstDayVisibleHours.map(h=>h.datetime),temperatureData:firstDayVisibleHours.map(h=>h.temp),humidityData:firstDayVisibleHours.map(h=>h.humidity),precipitationData:firstDayVisibleHours.map(h=>h.precipprob),windData:firstDayVisibleHours.map(h=>h.windspeed),onTimeRangeChange:setCurrentStartIndex,currentStartIndex:currentStartIndex,totalHours:firstDay.hours.length+1,selectedRange:selectedRange,onRangeChange:handleRangeChange})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/10 rounded-lg p-6 backdrop-blur-sm\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 gap-4 mb-4\",children:/*#__PURE__*/_jsx(ForecastCard,{date:formatDate(secondDay.datetime),icon:secondDay.icon===\"clear-day\"?\"sunny\":secondDay.icon===\"rain\"?\"rainy\":\"cloudy\",temp:secondDay.temp,humidity:secondDay.hours[0].humidity,maxRainChance:secondDay?Math.max(...secondDay.hours.map(h=>h.precipprob)):0,selectedRange:selectedRange,weatherStats:selectedRange?getWeatherStats(secondDay.hours,selectedRange.start,selectedRange.end):null})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white/5 rounded-lg p-4 min-h-[600px]\",children:/*#__PURE__*/_jsx(WeatherChart,{labels:secondDayVisibleHours.map(h=>h.datetime),temperatureData:secondDayVisibleHours.map(h=>h.temp),humidityData:secondDayVisibleHours.map(h=>h.humidity),precipitationData:secondDayVisibleHours.map(h=>h.precipprob),windData:secondDayVisibleHours.map(h=>h.windspeed),onTimeRangeChange:setCurrentStartIndex,currentStartIndex:currentStartIndex,totalHours:secondDay.hours.length+1,selectedRange:selectedRange,onRangeChange:handleRangeChange})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"md:max-w-6xl md:mx-auto md:mt-4\",children:/*#__PURE__*/_jsx(ChartControls,{totalHours:firstDay?firstDay.hours.length+1:25,currentStartIndex:currentStartIndex,onScrollChange:setCurrentStartIndex})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","WeatherChart","ForecastCard","ChartControls","useWeatherData","DAYS","TIME_PERIODS","TIME_RANGES","formatDate","getVisibleHours","jsx","_jsx","jsxs","_jsxs","App","location","setLocation","selectedDay","setSelectedDay","selectedPeriod","setSelectedPeriod","currentStartIndex","setCurrentStartIndex","selectedRange","setSelectedRange","firstDay","secondDay","loading","error","timeRange","start","handleLocationSubmit","e","preventDefault","form","target","input","elements","namedItem","value","trim","handleDayChange","parseInt","handlePeriodChange","handleRangeChange","range","getWeatherStats","hours","end","convertTimeToIndex","timeStr","includes","hour","replace","startHour","endHour","rangeHours","slice","length","maxTemp","Math","max","map","h","temp","minTemp","min","maxHumidity","humidity","minHumidity","maxRainChance","precipprob","minRainChance","maxWind","windspeed","minWind","className","children","firstDayVisibleHours","secondDayVisibleHours","src","concat","process","env","PUBLIC_URL","alt","onSubmit","type","name","placeholder","defaultValue","onChange","day","label","period","date","datetime","icon","weatherStats","labels","temperatureData","humidityData","precipitationData","windData","onTimeRangeChange","totalHours","onRangeChange","onScrollChange"],"sources":["/Users/leonliu/Desktop/Projects/WeatherApp/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport WeatherChart from \"./components/weather/WeatherChart\";\nimport ForecastCard from \"./components/weather/ForecastCard\";\nimport ChartControls from \"./components/weather/ChartControls\";\nimport { useWeatherData } from \"./hooks/useWeatherData\";\nimport { DAYS, TIME_PERIODS, TIME_RANGES } from './utils/constants';\nimport { formatDate, getVisibleHours } from './utils/dateUtils';\nimport { TimePeriod, HourlyData } from './types';\n\nconst App: React.FC = () => {\n  const [location, setLocation] = useState<string>(\"Manhattan, NYC\");\n  const [selectedDay, setSelectedDay] = useState<number>(5);\n  const [selectedPeriod, setSelectedPeriod] = useState<TimePeriod>(\"afternoon\");\n  const [currentStartIndex, setCurrentStartIndex] = useState<number>(0);\n  const [selectedRange, setSelectedRange] = useState<{ start: string; end: string } | null>(null);\n  const { firstDay, secondDay, loading, error } = useWeatherData(location, selectedDay);\n\n  // Reset the start index when the period changes\n  useEffect(() => {\n    const timeRange = TIME_RANGES[selectedPeriod];\n    setCurrentStartIndex(timeRange.start);\n  }, [selectedPeriod]);\n\n  // Reset selected range when scrolling occurs\n  useEffect(() => {\n    setSelectedRange(null);\n  }, [currentStartIndex]);\n\n  const handleLocationSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const form = e.target as HTMLFormElement;\n    const input = form.elements.namedItem('location') as HTMLInputElement;\n    if (input.value.trim()) {\n      setLocation(input.value.trim());\n    }\n  };\n\n  const handleDayChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedDay(parseInt(e.target.value));\n  };\n\n  const handlePeriodChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedPeriod(e.target.value as TimePeriod);\n  };\n\n  const handleRangeChange = (range: { start: string; end: string } | null) => {\n    setSelectedRange(range);\n  };\n\n  const getWeatherStats = (hours: HourlyData[], start: string, end: string) => {\n    // Convert time strings to hour indices (0-23)\n    const convertTimeToIndex = (timeStr: string): number => {\n      if (timeStr.includes('PM')) {\n        const hour = parseInt(timeStr.replace('PM', ''));\n        return hour === 12 ? 12 : hour + 12;\n      } else if (timeStr.includes('AM')) {\n        const hour = parseInt(timeStr.replace('AM', ''));\n        return hour === 12 ? 0 : hour;\n      }\n      return parseInt(timeStr);\n    };\n\n    const startHour = convertTimeToIndex(start);\n    const endHour = convertTimeToIndex(end);\n\n    // Get the hours within the selected range\n    const rangeHours = hours.slice(startHour, endHour + 1);\n\n    if (rangeHours.length === 0) {\n      return null;\n    }\n\n    return {\n      maxTemp: Math.max(...rangeHours.map(h => h.temp)),\n      minTemp: Math.min(...rangeHours.map(h => h.temp)),\n      maxHumidity: Math.max(...rangeHours.map(h => h.humidity)),\n      minHumidity: Math.min(...rangeHours.map(h => h.humidity)),\n      maxRainChance: Math.max(...rangeHours.map(h => h.precipprob)),\n      minRainChance: Math.min(...rangeHours.map(h => h.precipprob)),\n      maxWind: Math.max(...rangeHours.map(h => h.windspeed)),\n      minWind: Math.min(...rangeHours.map(h => h.windspeed))\n    };\n  };\n\n  if (loading) return <p className=\"text-center mt-20\">Loading...</p>;\n  if (error) return <p className=\"text-center mt-20 text-red-500\">{error}</p>;\n  if (!firstDay || !secondDay) return <p className=\"text-center mt-20\">No data available</p>;\n\n  const firstDayVisibleHours = getVisibleHours(firstDay.hours, currentStartIndex);\n  const secondDayVisibleHours = getVisibleHours(secondDay.hours, currentStartIndex);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-200 to-blue-400 p-4 md:p-8 pb-24 md:pb-8\">\n      <div className=\"container mx-auto\">\n        {/* Logo */}\n        <div className=\"absolute top-4 left-4\">\n          <img \n            src={`${process.env.PUBLIC_URL}/WeatherLogo.png`}\n            alt=\"Weather App Logo\" \n            className=\"h-12 w-auto\"\n          />\n        </div>\n\n        {/* Location Search Form */}\n        <form onSubmit={handleLocationSubmit} className=\"max-w-md mx-auto mb-8 mt-16\">\n          <div className=\"flex flex-col gap-4\">\n            <div className=\"flex gap-2\">\n              <input\n                type=\"text\"\n                name=\"location\"\n                placeholder=\"Enter location (e.g., San Francisco, CA)\"\n                className=\"flex-1 px-4 py-2 rounded-lg bg-white/90 backdrop-blur-sm text-gray-800 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                defaultValue={location}\n              />\n              <button\n                type=\"submit\"\n                className=\"px-6 py-2 bg-blue-400 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\n              >\n                Search\n              </button>\n            </div>\n            <div className=\"flex gap-2\">\n              <select\n                value={selectedDay}\n                onChange={handleDayChange}\n                className=\"flex-1 px-4 py-2 rounded-lg bg-white/90 backdrop-blur-sm text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {DAYS.map(day => (\n                  <option key={day.value} value={day.value}>\n                    {day.label}\n                  </option>\n                ))}\n              </select>\n              <select\n                value={selectedPeriod}\n                onChange={handlePeriodChange}\n                className=\"flex-1 px-4 py-2 rounded-lg bg-white/90 backdrop-blur-sm text-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {TIME_PERIODS.map(period => (\n                  <option key={period.value} value={period.value}>\n                    {period.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </form>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n          {/* First Day Forecast */}\n          <div className=\"bg-white/10 rounded-lg p-6 backdrop-blur-sm\">\n            <div className=\"grid grid-cols-1 gap-4 mb-4\">\n              <ForecastCard\n                date={formatDate(firstDay.datetime)}\n                icon={firstDay.icon === \"clear-day\" ? \"sunny\" : firstDay.icon === \"rain\" ? \"rainy\" : \"cloudy\"}\n                temp={firstDay.temp}\n                humidity={firstDay.hours[0].humidity}\n                maxRainChance={firstDay ? Math.max(...firstDay.hours.map(h => h.precipprob)) : 0}\n                selectedRange={selectedRange}\n                weatherStats={selectedRange ? getWeatherStats(firstDay.hours, selectedRange.start, selectedRange.end) : null}\n              />\n            </div>\n            <div className=\"bg-white/5 rounded-lg p-4 min-h-[600px]\">\n              <WeatherChart\n                labels={firstDayVisibleHours.map((h) => h.datetime)}\n                temperatureData={firstDayVisibleHours.map((h) => h.temp)}\n                humidityData={firstDayVisibleHours.map((h) => h.humidity)}\n                precipitationData={firstDayVisibleHours.map((h) => h.precipprob)}\n                windData={firstDayVisibleHours.map((h) => h.windspeed)}\n                onTimeRangeChange={setCurrentStartIndex}\n                currentStartIndex={currentStartIndex}\n                totalHours={firstDay.hours.length + 1}\n                selectedRange={selectedRange}\n                onRangeChange={handleRangeChange}\n              />\n            </div>\n          </div>\n\n          {/* Second Day Forecast */}\n          <div className=\"bg-white/10 rounded-lg p-6 backdrop-blur-sm\">\n            <div className=\"grid grid-cols-1 gap-4 mb-4\">\n              <ForecastCard\n                date={formatDate(secondDay.datetime)}\n                icon={secondDay.icon === \"clear-day\" ? \"sunny\" : secondDay.icon === \"rain\" ? \"rainy\" : \"cloudy\"}\n                temp={secondDay.temp}\n                humidity={secondDay.hours[0].humidity}\n                maxRainChance={secondDay ? Math.max(...secondDay.hours.map(h => h.precipprob)) : 0}\n                selectedRange={selectedRange}\n                weatherStats={selectedRange ? getWeatherStats(secondDay.hours, selectedRange.start, selectedRange.end) : null}\n              />\n            </div>\n            <div className=\"bg-white/5 rounded-lg p-4 min-h-[600px]\">\n              <WeatherChart\n                labels={secondDayVisibleHours.map((h) => h.datetime)}\n                temperatureData={secondDayVisibleHours.map((h) => h.temp)}\n                humidityData={secondDayVisibleHours.map((h) => h.humidity)}\n                precipitationData={secondDayVisibleHours.map((h) => h.precipprob)}\n                windData={secondDayVisibleHours.map((h) => h.windspeed)}\n                onTimeRangeChange={setCurrentStartIndex}\n                currentStartIndex={currentStartIndex}\n                totalHours={secondDay.hours.length + 1}\n                selectedRange={selectedRange}\n                onRangeChange={handleRangeChange}\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Scroll Controls */}\n        <div className=\"md:max-w-6xl md:mx-auto md:mt-4\">\n          <ChartControls\n            totalHours={firstDay ? firstDay.hours.length + 1 : 25}\n            currentStartIndex={currentStartIndex}\n            onScrollChange={setCurrentStartIndex}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,MAAO,CAAAC,YAAY,KAAM,mCAAmC,CAC5D,MAAO,CAAAC,YAAY,KAAM,mCAAmC,CAC5D,MAAO,CAAAC,aAAa,KAAM,oCAAoC,CAC9D,OAASC,cAAc,KAAQ,wBAAwB,CACvD,OAASC,IAAI,CAAEC,YAAY,CAAEC,WAAW,KAAQ,mBAAmB,CACnE,OAASC,UAAU,CAAEC,eAAe,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGhE,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAS,gBAAgB,CAAC,CAClE,KAAM,CAACkB,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAS,CAAC,CAAC,CACzD,KAAM,CAACoB,cAAc,CAAEC,iBAAiB,CAAC,CAAGrB,QAAQ,CAAa,WAAW,CAAC,CAC7E,KAAM,CAACsB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGvB,QAAQ,CAAS,CAAC,CAAC,CACrE,KAAM,CAACwB,aAAa,CAAEC,gBAAgB,CAAC,CAAGzB,QAAQ,CAAwC,IAAI,CAAC,CAC/F,KAAM,CAAE0B,QAAQ,CAAEC,SAAS,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAGxB,cAAc,CAACW,QAAQ,CAAEE,WAAW,CAAC,CAErF;AACAjB,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6B,SAAS,CAAGtB,WAAW,CAACY,cAAc,CAAC,CAC7CG,oBAAoB,CAACO,SAAS,CAACC,KAAK,CAAC,CACvC,CAAC,CAAE,CAACX,cAAc,CAAC,CAAC,CAEpB;AACAnB,SAAS,CAAC,IAAM,CACdwB,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAC,CAAE,CAACH,iBAAiB,CAAC,CAAC,CAEvB,KAAM,CAAAU,oBAAoB,CAAIC,CAAkB,EAAK,CACnDA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,KAAM,CAAAC,IAAI,CAAGF,CAAC,CAACG,MAAyB,CACxC,KAAM,CAAAC,KAAK,CAAGF,IAAI,CAACG,QAAQ,CAACC,SAAS,CAAC,UAAU,CAAqB,CACrE,GAAIF,KAAK,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC,CAAE,CACtBxB,WAAW,CAACoB,KAAK,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CACjC,CACF,CAAC,CAED,KAAM,CAAAC,eAAe,CAAIT,CAAuC,EAAK,CACnEd,cAAc,CAACwB,QAAQ,CAACV,CAAC,CAACG,MAAM,CAACI,KAAK,CAAC,CAAC,CAC1C,CAAC,CAED,KAAM,CAAAI,kBAAkB,CAAIX,CAAuC,EAAK,CACtEZ,iBAAiB,CAACY,CAAC,CAACG,MAAM,CAACI,KAAmB,CAAC,CACjD,CAAC,CAED,KAAM,CAAAK,iBAAiB,CAAIC,KAA4C,EAAK,CAC1ErB,gBAAgB,CAACqB,KAAK,CAAC,CACzB,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGA,CAACC,KAAmB,CAAEjB,KAAa,CAAEkB,GAAW,GAAK,CAC3E;AACA,KAAM,CAAAC,kBAAkB,CAAIC,OAAe,EAAa,CACtD,GAAIA,OAAO,CAACC,QAAQ,CAAC,IAAI,CAAC,CAAE,CAC1B,KAAM,CAAAC,IAAI,CAAGV,QAAQ,CAACQ,OAAO,CAACG,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,CAChD,MAAO,CAAAD,IAAI,GAAK,EAAE,CAAG,EAAE,CAAGA,IAAI,CAAG,EAAE,CACrC,CAAC,IAAM,IAAIF,OAAO,CAACC,QAAQ,CAAC,IAAI,CAAC,CAAE,CACjC,KAAM,CAAAC,IAAI,CAAGV,QAAQ,CAACQ,OAAO,CAACG,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAC,CAChD,MAAO,CAAAD,IAAI,GAAK,EAAE,CAAG,CAAC,CAAGA,IAAI,CAC/B,CACA,MAAO,CAAAV,QAAQ,CAACQ,OAAO,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAI,SAAS,CAAGL,kBAAkB,CAACnB,KAAK,CAAC,CAC3C,KAAM,CAAAyB,OAAO,CAAGN,kBAAkB,CAACD,GAAG,CAAC,CAEvC;AACA,KAAM,CAAAQ,UAAU,CAAGT,KAAK,CAACU,KAAK,CAACH,SAAS,CAAEC,OAAO,CAAG,CAAC,CAAC,CAEtD,GAAIC,UAAU,CAACE,MAAM,GAAK,CAAC,CAAE,CAC3B,MAAO,KAAI,CACb,CAEA,MAAO,CACLC,OAAO,CAAEC,IAAI,CAACC,GAAG,CAAC,GAAGL,UAAU,CAACM,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CACjDC,OAAO,CAAEL,IAAI,CAACM,GAAG,CAAC,GAAGV,UAAU,CAACM,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CACjDG,WAAW,CAAEP,IAAI,CAACC,GAAG,CAAC,GAAGL,UAAU,CAACM,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACK,QAAQ,CAAC,CAAC,CACzDC,WAAW,CAAET,IAAI,CAACM,GAAG,CAAC,GAAGV,UAAU,CAACM,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACK,QAAQ,CAAC,CAAC,CACzDE,aAAa,CAAEV,IAAI,CAACC,GAAG,CAAC,GAAGL,UAAU,CAACM,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACQ,UAAU,CAAC,CAAC,CAC7DC,aAAa,CAAEZ,IAAI,CAACM,GAAG,CAAC,GAAGV,UAAU,CAACM,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACQ,UAAU,CAAC,CAAC,CAC7DE,OAAO,CAAEb,IAAI,CAACC,GAAG,CAAC,GAAGL,UAAU,CAACM,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACW,SAAS,CAAC,CAAC,CACtDC,OAAO,CAAEf,IAAI,CAACM,GAAG,CAAC,GAAGV,UAAU,CAACM,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACW,SAAS,CAAC,CACvD,CAAC,CACH,CAAC,CAED,GAAI/C,OAAO,CAAE,mBAAOhB,IAAA,MAAGiE,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,YAAU,CAAG,CAAC,CACnE,GAAIjD,KAAK,CAAE,mBAAOjB,IAAA,MAAGiE,SAAS,CAAC,gCAAgC,CAAAC,QAAA,CAAEjD,KAAK,CAAI,CAAC,CAC3E,GAAI,CAACH,QAAQ,EAAI,CAACC,SAAS,CAAE,mBAAOf,IAAA,MAAGiE,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,mBAAiB,CAAG,CAAC,CAE1F,KAAM,CAAAC,oBAAoB,CAAGrE,eAAe,CAACgB,QAAQ,CAACsB,KAAK,CAAE1B,iBAAiB,CAAC,CAC/E,KAAM,CAAA0D,qBAAqB,CAAGtE,eAAe,CAACiB,SAAS,CAACqB,KAAK,CAAE1B,iBAAiB,CAAC,CAEjF,mBACEV,IAAA,QAAKiE,SAAS,CAAC,mFAAmF,CAAAC,QAAA,cAChGhE,KAAA,QAAK+D,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAEhClE,IAAA,QAAKiE,SAAS,CAAC,uBAAuB,CAAAC,QAAA,cACpClE,IAAA,QACEqE,GAAG,IAAAC,MAAA,CAAKC,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAmB,CACjDC,GAAG,CAAC,kBAAkB,CACtBT,SAAS,CAAC,aAAa,CACxB,CAAC,CACC,CAAC,cAGNjE,IAAA,SAAM2E,QAAQ,CAAEvD,oBAAqB,CAAC6C,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC3EhE,KAAA,QAAK+D,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClChE,KAAA,QAAK+D,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlE,IAAA,UACE4E,IAAI,CAAC,MAAM,CACXC,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,0CAA0C,CACtDb,SAAS,CAAC,iJAAiJ,CAC3Jc,YAAY,CAAE3E,QAAS,CACxB,CAAC,cACFJ,IAAA,WACE4E,IAAI,CAAC,QAAQ,CACbX,SAAS,CAAC,qIAAqI,CAAAC,QAAA,CAChJ,QAED,CAAQ,CAAC,EACN,CAAC,cACNhE,KAAA,QAAK+D,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBlE,IAAA,WACE4B,KAAK,CAAEtB,WAAY,CACnB0E,QAAQ,CAAElD,eAAgB,CAC1BmC,SAAS,CAAC,4HAA4H,CAAAC,QAAA,CAErIxE,IAAI,CAACyD,GAAG,CAAC8B,GAAG,eACXjF,IAAA,WAAwB4B,KAAK,CAAEqD,GAAG,CAACrD,KAAM,CAAAsC,QAAA,CACtCe,GAAG,CAACC,KAAK,EADCD,GAAG,CAACrD,KAET,CACT,CAAC,CACI,CAAC,cACT5B,IAAA,WACE4B,KAAK,CAAEpB,cAAe,CACtBwE,QAAQ,CAAEhD,kBAAmB,CAC7BiC,SAAS,CAAC,4HAA4H,CAAAC,QAAA,CAErIvE,YAAY,CAACwD,GAAG,CAACgC,MAAM,eACtBnF,IAAA,WAA2B4B,KAAK,CAAEuD,MAAM,CAACvD,KAAM,CAAAsC,QAAA,CAC5CiB,MAAM,CAACD,KAAK,EADFC,MAAM,CAACvD,KAEZ,CACT,CAAC,CACI,CAAC,EACN,CAAC,EACH,CAAC,CACF,CAAC,cAEP1B,KAAA,QAAK+D,SAAS,CAAC,yDAAyD,CAAAC,QAAA,eAEtEhE,KAAA,QAAK+D,SAAS,CAAC,6CAA6C,CAAAC,QAAA,eAC1DlE,IAAA,QAAKiE,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1ClE,IAAA,CAACT,YAAY,EACX6F,IAAI,CAAEvF,UAAU,CAACiB,QAAQ,CAACuE,QAAQ,CAAE,CACpCC,IAAI,CAAExE,QAAQ,CAACwE,IAAI,GAAK,WAAW,CAAG,OAAO,CAAGxE,QAAQ,CAACwE,IAAI,GAAK,MAAM,CAAG,OAAO,CAAG,QAAS,CAC9FjC,IAAI,CAAEvC,QAAQ,CAACuC,IAAK,CACpBI,QAAQ,CAAE3C,QAAQ,CAACsB,KAAK,CAAC,CAAC,CAAC,CAACqB,QAAS,CACrCE,aAAa,CAAE7C,QAAQ,CAAGmC,IAAI,CAACC,GAAG,CAAC,GAAGpC,QAAQ,CAACsB,KAAK,CAACe,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACQ,UAAU,CAAC,CAAC,CAAG,CAAE,CACjFhD,aAAa,CAAEA,aAAc,CAC7B2E,YAAY,CAAE3E,aAAa,CAAGuB,eAAe,CAACrB,QAAQ,CAACsB,KAAK,CAAExB,aAAa,CAACO,KAAK,CAAEP,aAAa,CAACyB,GAAG,CAAC,CAAG,IAAK,CAC9G,CAAC,CACC,CAAC,cACNrC,IAAA,QAAKiE,SAAS,CAAC,yCAAyC,CAAAC,QAAA,cACtDlE,IAAA,CAACV,YAAY,EACXkG,MAAM,CAAErB,oBAAoB,CAAChB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACiC,QAAQ,CAAE,CACpDI,eAAe,CAAEtB,oBAAoB,CAAChB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACC,IAAI,CAAE,CACzDqC,YAAY,CAAEvB,oBAAoB,CAAChB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACK,QAAQ,CAAE,CAC1DkC,iBAAiB,CAAExB,oBAAoB,CAAChB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACQ,UAAU,CAAE,CACjEgC,QAAQ,CAAEzB,oBAAoB,CAAChB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACW,SAAS,CAAE,CACvD8B,iBAAiB,CAAElF,oBAAqB,CACxCD,iBAAiB,CAAEA,iBAAkB,CACrCoF,UAAU,CAAEhF,QAAQ,CAACsB,KAAK,CAACW,MAAM,CAAG,CAAE,CACtCnC,aAAa,CAAEA,aAAc,CAC7BmF,aAAa,CAAE9D,iBAAkB,CAClC,CAAC,CACC,CAAC,EACH,CAAC,cAGN/B,KAAA,QAAK+D,SAAS,CAAC,6CAA6C,CAAAC,QAAA,eAC1DlE,IAAA,QAAKiE,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1ClE,IAAA,CAACT,YAAY,EACX6F,IAAI,CAAEvF,UAAU,CAACkB,SAAS,CAACsE,QAAQ,CAAE,CACrCC,IAAI,CAAEvE,SAAS,CAACuE,IAAI,GAAK,WAAW,CAAG,OAAO,CAAGvE,SAAS,CAACuE,IAAI,GAAK,MAAM,CAAG,OAAO,CAAG,QAAS,CAChGjC,IAAI,CAAEtC,SAAS,CAACsC,IAAK,CACrBI,QAAQ,CAAE1C,SAAS,CAACqB,KAAK,CAAC,CAAC,CAAC,CAACqB,QAAS,CACtCE,aAAa,CAAE5C,SAAS,CAAGkC,IAAI,CAACC,GAAG,CAAC,GAAGnC,SAAS,CAACqB,KAAK,CAACe,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACQ,UAAU,CAAC,CAAC,CAAG,CAAE,CACnFhD,aAAa,CAAEA,aAAc,CAC7B2E,YAAY,CAAE3E,aAAa,CAAGuB,eAAe,CAACpB,SAAS,CAACqB,KAAK,CAAExB,aAAa,CAACO,KAAK,CAAEP,aAAa,CAACyB,GAAG,CAAC,CAAG,IAAK,CAC/G,CAAC,CACC,CAAC,cACNrC,IAAA,QAAKiE,SAAS,CAAC,yCAAyC,CAAAC,QAAA,cACtDlE,IAAA,CAACV,YAAY,EACXkG,MAAM,CAAEpB,qBAAqB,CAACjB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACiC,QAAQ,CAAE,CACrDI,eAAe,CAAErB,qBAAqB,CAACjB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACC,IAAI,CAAE,CAC1DqC,YAAY,CAAEtB,qBAAqB,CAACjB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACK,QAAQ,CAAE,CAC3DkC,iBAAiB,CAAEvB,qBAAqB,CAACjB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACQ,UAAU,CAAE,CAClEgC,QAAQ,CAAExB,qBAAqB,CAACjB,GAAG,CAAEC,CAAC,EAAKA,CAAC,CAACW,SAAS,CAAE,CACxD8B,iBAAiB,CAAElF,oBAAqB,CACxCD,iBAAiB,CAAEA,iBAAkB,CACrCoF,UAAU,CAAE/E,SAAS,CAACqB,KAAK,CAACW,MAAM,CAAG,CAAE,CACvCnC,aAAa,CAAEA,aAAc,CAC7BmF,aAAa,CAAE9D,iBAAkB,CAClC,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,cAGNjC,IAAA,QAAKiE,SAAS,CAAC,iCAAiC,CAAAC,QAAA,cAC9ClE,IAAA,CAACR,aAAa,EACZsG,UAAU,CAAEhF,QAAQ,CAAGA,QAAQ,CAACsB,KAAK,CAACW,MAAM,CAAG,CAAC,CAAG,EAAG,CACtDrC,iBAAiB,CAAEA,iBAAkB,CACrCsF,cAAc,CAAErF,oBAAqB,CACtC,CAAC,CACC,CAAC,EACH,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}