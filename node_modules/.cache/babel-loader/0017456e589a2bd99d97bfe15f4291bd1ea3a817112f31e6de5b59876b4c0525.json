{"ast":null,"code":"export const formatDate=dateStr=>{const date=new Date(dateStr);const localDate=new Date(date.getTime()+date.getTimezoneOffset()*60000);return localDate.toLocaleDateString('en-US',{weekday:'long',month:'short',day:'numeric'});};export const formatTime=timeStr=>{const hour=parseInt(timeStr.split(':')[0]);const period=hour>=12?'PM':'AM';const hour12=hour%12||12;return\"\".concat(hour12).concat(period);};export const getVisibleHours=(hours,currentStartIndex)=>{// Show exactly 8 hours starting from the current start index\nconst endIdx=Math.min(hours.length,currentStartIndex+8);return hours.slice(currentStartIndex,endIdx);};","map":{"version":3,"names":["formatDate","dateStr","date","Date","localDate","getTime","getTimezoneOffset","toLocaleDateString","weekday","month","day","formatTime","timeStr","hour","parseInt","split","period","hour12","concat","getVisibleHours","hours","currentStartIndex","endIdx","Math","min","length","slice"],"sources":["/Users/leonliu/Desktop/Projects/WeatherApp/src/utils/dateUtils.ts"],"sourcesContent":["import { HourlyData } from '../types';\n\nexport const formatDate = (dateStr: string) => {\n  const date = new Date(dateStr);\n  const localDate = new Date(date.getTime() + date.getTimezoneOffset() * 60000);\n  return localDate.toLocaleDateString('en-US', { \n    weekday: 'long', \n    month: 'short', \n    day: 'numeric' \n  });\n};\n\nexport const formatTime = (timeStr: string) => {\n  const hour = parseInt(timeStr.split(':')[0]);\n  const period = hour >= 12 ? 'PM' : 'AM';\n  const hour12 = hour % 12 || 12;\n  return `${hour12}${period}`;\n};\n\nexport const getVisibleHours = (hours: HourlyData[], currentStartIndex: number): HourlyData[] => {\n  // Show exactly 8 hours starting from the current start index\n  const endIdx = Math.min(hours.length, currentStartIndex + 8);\n  return hours.slice(currentStartIndex, endIdx);\n}; "],"mappings":"AAEA,MAAO,MAAM,CAAAA,UAAU,CAAIC,OAAe,EAAK,CAC7C,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,OAAO,CAAC,CAC9B,KAAM,CAAAG,SAAS,CAAG,GAAI,CAAAD,IAAI,CAACD,IAAI,CAACG,OAAO,CAAC,CAAC,CAAGH,IAAI,CAACI,iBAAiB,CAAC,CAAC,CAAG,KAAK,CAAC,CAC7E,MAAO,CAAAF,SAAS,CAACG,kBAAkB,CAAC,OAAO,CAAE,CAC3CC,OAAO,CAAE,MAAM,CACfC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SACP,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAC,UAAU,CAAIC,OAAe,EAAK,CAC7C,KAAM,CAAAC,IAAI,CAAGC,QAAQ,CAACF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5C,KAAM,CAAAC,MAAM,CAAGH,IAAI,EAAI,EAAE,CAAG,IAAI,CAAG,IAAI,CACvC,KAAM,CAAAI,MAAM,CAAGJ,IAAI,CAAG,EAAE,EAAI,EAAE,CAC9B,SAAAK,MAAA,CAAUD,MAAM,EAAAC,MAAA,CAAGF,MAAM,EAC3B,CAAC,CAED,MAAO,MAAM,CAAAG,eAAe,CAAGA,CAACC,KAAmB,CAAEC,iBAAyB,GAAmB,CAC/F;AACA,KAAM,CAAAC,MAAM,CAAGC,IAAI,CAACC,GAAG,CAACJ,KAAK,CAACK,MAAM,CAAEJ,iBAAiB,CAAG,CAAC,CAAC,CAC5D,MAAO,CAAAD,KAAK,CAACM,KAAK,CAACL,iBAAiB,CAAEC,MAAM,CAAC,CAC/C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}